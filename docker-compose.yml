volumes:
  myDbVolume:

services:
  client:
    #image: client
    build:
      context: ./client/
      dockerfile: Dockerfile
    # ports:
    #   - "80:80"
    networks:
      - myNetwork
    environment:
      - CERN_RESTAURANT_CLIENT_PORT=80
      - CERN_RESTAURANT_CLIENT_PREFIX=/client
      - VITE_BACKEND_URL=https://localhost/api/
    volumes:
      - ./client:/workspace/
      - /workspace/node_modules/
    command: ["npm", "run", "dev"]

  backend:
    # image: backend
    build:
      context: .
      dockerfile: ./Dockerfile
    # ports:
    #   - "3000:3000"
    depends_on:
      - postgres
    networks:
      - myNetwork
    environment:
      - DB_PORT=5432
    volumes:
      - ./server:/workspace/server
    command:
      [
        "uvicorn",
        "server.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "3000",
        "--reload",
      ]

  postgres:
    image: postgres:16
    ports:
      - "5439:5432"
    environment:
      - POSTGRES_DB=cern
      - POSTGRES_USER=tech_user
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./database/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
      - myDbVolume:/var/lib/postgresql/data/
    networks:
      - myNetwork

  caddy:
    image: caddy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./development-certs:/data
    networks:
      - myNetwork

networks:
  myNetwork:
