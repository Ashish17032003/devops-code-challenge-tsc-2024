apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  labels:
    app: postgres
data:
  POSTGRES_DB: cern
  POSTGRES_USER: tech_user
  POSTGRES_PASSWORD: postgres

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /run/desktop/mnt/host/c/Users/KIIT/Documents/postgres

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "postgres:16"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            # - mountPath: /var/lib/postgresql/data
            #   name: postgresdata
            - mountPath: /docker-entrypoint-initdb.d
              name: postgresinitdata
      volumes:
        - name: postgresdata
          # persistentVolumeClaim:
          # claimName: postgres-volume-claim
          emptyDir: {}
        - name: postgresinitdata
          hostPath:
            type: File
            path: "/mnt/host/c/Users/KIIT/Documents/Github/devops-code-challenge-tsc-2024/database"
